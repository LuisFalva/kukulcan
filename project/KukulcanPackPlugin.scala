import sbt.Keys._
import sbt.{Def, _}
import xerial.sbt.pack._

object KukulcanPackPlugin extends AutoPlugin with PackArchive {

  val kukulcan = taskKey[Unit]("Creates a directory with all dependencies generated by sbt-pack plugin.")

  override lazy val projectSettings: Seq[Def.Setting[_]] = kukulcanSettings

  import PackPlugin.autoImport.{packAllUnmanagedJars, packLibJars, packModuleEntries}

  lazy val kukulcanSettings: Seq[Def.Setting[_]] = Seq[Def.Setting[_]](
    kukulcan := {
      val log = streams.value.log
      val dirLibs = baseDirectory.value / "libs"

      val modules = packModuleEntries.value.map(_.file)
      val unmanaged = packAllUnmanagedJars.value.flatMap(_._1).map(_.data)
      val libs = packLibJars.value.map(_._1)

      dirLibs.mkdirs()
      IO.delete((dirLibs * "*.jar").get)
      val result = (modules ++ unmanaged ++ libs).distinct
      result.foreach(d => IO.copyFile(d, dirLibs / d.getName))

      log.info(s"${result.size} dependencies needed by Kukulcan have been copied into '$dirLibs'.")
    }
  )
}
